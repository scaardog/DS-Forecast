<script src="#APP_IMAGES#highcharts.js"></script>
<script src="#APP_IMAGES#exporting.js"></script>
<script type="text/javascript"> 
    
    $.post('wwv_flow.show',
           {"p_request" : "APPLICATION_PROCESS=get_performance",
            "p_flow_id" : $v('pFlowId'),
            "p_flow_step_id" : $v('pFlowStepId'),
            "p_instance" : $v('pInstance'),
            "x01" : $v('P21_SELECT_X'),
            "x02" : $v('P21_SELECT_Y'),
            "x03" : $v('P21_ROLLTYPE'),
            "x04" : $v('P21_STATUS'),
            "x05" : $v('P21_QUALITY'),
            "x06" : $v('P21_SUPPLIER'),
            "x07" : $v('P21_GROUPBY'),
            "x08" : $v('P21_AGGREGATE'),
            "x09" : $v('P21_GBPERIOD'),
            "x10" : $v('P21_POSITION'),
            "f01" : [$v('P21_PERIOD_START'),$v('P21_PERIOD_FINISH')]
           },
           function(strData){
               console.log(strData);//dont forget to delete me
               if ($v(P21_GROUPBY)==0 || $v(P21_GROUPBY)=='ID_ROLL_SUPP'||$v(P21_GROUPBY)=='ROLL_LAST_POSITION'){
                 var seriesData = JSON.parse(strData,function(key,value){
                   return value;
                 });
               }else if($v(P21_GROUPBY)=='Period'){
                 var seriesData = JSON.parse(strData,function(key,value){
	           if (key==="data"){
                     if ($v(P21_GBPERIOD)==1)
                     {
                       let d =value ;
    	               let arr = [];
    	               for(let k=0;k<d.length;k++)
    	               {
    		         arr.push([Date.UTC(d[k][0]), d[k][1]]);
    	               }
    		       return arr;
                     }
                     else
                     {
                       let d = value;
                       let arr = [];
                       let multiplier = $v(P21_GBPERIOD)==2?3:1;
                       for(var k=0;k<d.length;k++)
                       {
                         var temp = d[k][0].split('/');
    	                 arr.push([Date.UTC(temp[1], temp[0]*multiplier-1), d[k][1]]);
                       }
                       return arr;
                     }
                   }else{
                     return value;
                   };
               });
               }else{
                 var series_names;
                 switch($v(P21_GROUPBY))
                 {
                   case "QUALITY_ROLL":
                     series_names = ["Chrome","Indefinite","HSS"];
                     break;
                   case "STATUS":
                     series_names = ["New","OK","In work, requires repair", "Requires repair","Broken","Decomissioned"];
                     break;
                   case "ROLL_LAST_POSITION":
                     series_names = ["TOP","BOT"];
                     break;
                 }
                 var seriesData = JSON.parse(strData,function(key,value){
	           if (key=="name")
                   {
  	             return series_names[value-1];
                   }
                   else
	             return value;
                   });
               }

               $('#container').highcharts({
                 plotOptions:{
		       series:{
		           marker:{ symbol: "circle", enabled: true, }
		       }
		 },
                 title:{
                     text:''             
                 },
                 tooltip:{
                   headerFormat: '<b>{series.name}</b><br>',
                   pointFormat: '{point.y}'
                 },
                 chart: {
                   type: 'scatter',
                   zoomType: 'xy'
                 },
                 xAxis: {
                   type: $v('P21_SELECT_X')=='Period'?'datetime':null,
                   min: $v('P21_SELECT_X')=='type_roll'?1:
                        $v('P21_SELECT_X')=='QUALITY_ROLL'?1:
                        $v('P21_SELECT_X')=='ID_ROLL_SUPP'?1:null,
                   categories: $v('P21_SELECT_X')=='TYPE_ROLL'?['','WR','BR']:
                               $v('P21_SELECT_X')=='STATUS'?['NEW','OK','In work, requires repair','Required repair','Broken','Decommissioned','DNE','Duplicate']:
                               $v('P21_SELECT_X')=='QUALITY_ROLL'?['','Chrome','Indefinite','HSS']:
                               $v('P21_SELECT_X')=='ID_ROLL_SUPP'?['','AS','KB','GP']:
                               $v('P21_SELECT_X')=='ROLL_LAST_POSITION'?['','TOP','BOT']:null,
                   title: {
                     text: $v('P21_SELECT_X')=='TONS_ROLLED'?'Weight, tn':
                     $v('P21_SELECT_X')=='LENGTH_ROLLED'?'Length, km':
                     $v('P21_SELECT_X')=='Period'?'Date':
                     $v('P21_SELECT_X')=='TYPE_ROLL'?'Roll type':
                     $v('P21_SELECT_X')=='STATUS'?'Roll status':
                     $v('P21_SELECT_X')=='ROLL_LAST_POSITION'?'Position':
                     $v('P21_SELECT_X')=='QUALITY_ROLL'?'Quality':
                     $v('P21_SELECT_X')=='ID_ROLL_SUPP'?'Supplier':
                     'Error'
                   }
                 },
                 legend: {
                   layout: 'vertical',
                   align: 'right',
                   verticalAlign: 'middle'
                 }, 
                 yAxis: {
                   title: {
                     text: $v('P21_SELECT_Y')=='TONNES_PER_MM'?'Performance, tn/mm':
                     $v('P21_SELECT_Y')=='ROLLED_KM_PER_MM'?'Performance, km/mm':
                     $v('P21_SELECT_Y')=='TONNES_PER_MM_NORM'?'Performance, tn/mm (normal)':
                     'Performance, km/mm (normal)' 
                   }
                 },
                 series:$v('P21_GBPERIOD')==1?seriesData.sort(
                                                function compare(a, b) {
                                                  if (a.name > b.name) {
                                                    return 1;
                                                  } else {
                                                    return -1;
                                                  }
                                                }
                                              ):
                                              seriesData.sort(
  	                                        function compare(a, b) {
    	                                          if(Date.UTC(a.name.split("/")[1],a.name.split("/")[0]-1) > Date.UTC(b.name.split("/")[1],b.name.split("/")[0]-1)) {
      	                                            return 1;
                                                  } else {
      	                                            return -1;
                                                  }
                                                }
                                              )
            }) 
          });
</script>